"use strict";!function(o){o.module("application",["ngRoute"]).config(["$locationProvider","$routeProvider",function(o,t){o.html5Mode(!0),t.when("/login",{templateUrl:"www/app/routes/loginpage/loginpage.htm"}).when("/rooms",{templateUrl:"www/app/routes/rooms/rooms.htm",controller:"roomsController",controllerAs:"ctrl"}).when("/welcome",{templateUrl:"www/app/routes/welcome/welcome.htm"}).otherwise({redirectTo:"/welcome"})}])}(window.angular),function(o){o.module("application").service("loginService",["$location",function(o){function t(t){this.loggedInUser={name:t},this.inputName=null,o.path("/rooms")}function n(){this.loggedInUser={},o.path("/welcome")}function e(){return Object.keys(this.loggedInUser).length>0}this.loggedInUser={},this.login=t,this.logout=n,this.isLoggedIn=e}])}(window.angular),function(o){o.module("application").service("navUpdateService",["$location",function(o){function t(t){return t===o.path()}this.updateActive=t}])}(window.angular),function(o){o.module("application").controller("exerciseOneController",["$routeParams","es",function(o,t){this.es=t}])}(window.angular),function(o){o.module("application").controller("exerciseTwoController",["$routeParams","es",function(o,t){function n(){return e[Math.floor(Math.random()*e.length)]}this.es=t,this.title="Exercise 2";var e=[{name:"Brown",hex:"#A52A2A"},{name:"Blue",hex:"#0000FF"},{name:"Gainsboro",hex:"#DCDCDC"}];this.objectArray=[],this._createObject=function(){return{name:"Obj"+(this.objectArray.length+1),clickCount:0,color:n()}},this.controllerInitObject=this.objectArray,this.addNewObject=function(){this.objectArray.push(this._createObject())};this.buttonText="Button text",this.buttonMouseEnter=function(){this.buttonText="Rolled over"},this.buttonResetClick=function(){this.buttonText="Button text"}}])}(window.angular),function(o){o.module("application").component("gwLogin",{templateUrl:"www/app/components/login/login.htm",controller:"loginComponentController",controllerAs:"ctrl"})}(window.angular),function(o){o.module("application").controller("loginComponentController",["loginService",function(o){this.loginService=o}])}(window.angular),function(o){o.module("application").component("navigation",{templateUrl:"www/app/components/navigation/navigation.html",controller:"navigationController",controllerAs:"ctrl"})}(window.angular),function(o){o.module("application").controller("navigationController",["loginService","navUpdateService",function(o,t){this.loginService=o,this.navUpdateService=t}])}(window.angular),function(o){o.module("application").controller("roomsController",["loginService",function(o){this.loginService=o}])}(window.angular);
//# sourceMappingURL=data:application/json;charset=utf8;base64,
